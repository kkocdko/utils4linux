#!/bin/sh
# Here's kkocdko's way to fight against the GFW. Maybe not fit your preference.
# The init part. Execute "./gfw init" will run this part.
if [ "$1" = "init" ]; then
# Use clash-meta because many of the proxy providers (sometimes called as "airport" in chinese) uses modern protocol like vless + xtls that was not supported by classic clash. And, always uses only the core, but not any gui tools.
[ ! -e clash-meta.gz ] && curl -o clash-meta.gz -L https://github.com/MetaCubeX/Clash.Meta/releases/download/v1.16.0/clash.meta-linux-amd64-v1.16.0.gz
rm -rf inner
mkdir -p inner
cd inner
gzip -d <../clash-meta.gz >clash-meta
chmod +x clash-meta


exit
# https://ymjc.cfd/api/v1/client/subscribe?token=8db239a34f208dd47df7c53be8757ac8

./subconverter -g
sed -e '/^external-controller:/d' -e '/^socks-port:/d' -e '/^port:/d' -e '/^allow-lan:/d' -i config.yaml
sed '1s/^/tproxy-port: 7893\n/' -i config.yaml
# https://xtls.github.io/document/level-2/transparent_proxy/transparent_proxy.html
# https://gist.github.com/phlinhng/38a141862de775b10c613f7f2c6ade99
# https://wiki.nftables.org/wiki-nftables/index.php/Main_differences_with_iptables
# https://github.com/Dreamacro/clash/wiki/Configuration/a1d5c350643b51500cbdc78ab249f73aacb4cf2c
# https://github.com/MetaCubeX/Clash.Meta
# https://www.wogong.net/blog/2023/07/clash-gateway
# curl https://1.1.1.1/
# cat <<EOF >config.yaml
# somewhat
# EOF
fi
# The main part. Execute "./gfw" will run this part.
if [ "$1" = "" ]; then
cd inner
./clash-meta -d . -f ../config.yaml
exit
fi
