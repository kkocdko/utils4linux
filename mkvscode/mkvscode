#!/bin/sh
cd $(dirname $0)

trap exit SIGINT

if [ ! -e dist ]; then
echo ">>> init"
mkdir dist
cd dist
# sudo dnf install libxkbfile-devel.x86_64 libsecret-devel krb5-devel
# git clone --depth=2 https://kkocdko:ghp_xxx@github.com/kkocdko/vscode.git
curl -o vscode.tar.gz -L https://github.com/microsoft/vscode/archive/main.tar.gz
# curl -o vscode.tar.gz -L https://github.com/microsoft/vscode/archive/refs/tags/1.85.1.tar.gz
mkdir vscode
cd vscode
tar -xf ../vscode.tar.gz --strip-components 1
echo "console.log('skip');" > build/azure-pipelines/common/installPlaywright.js
export -n ALL_PROXY
export -n all_proxy
# npm i -g yarn
# npm config set registry 'https://registry.npmmirror.com'
# npm config set registry --global 'https://registry.npmmirror.com'
# yarn config set registry 'https://registry.npmmirror.com'
# yarn config set registry --global 'https://registry.npmmirror.com'
# git update-index --assume-unchanged $(find -name "*.lock" -not -path "./node_modules/*")
sed -i "s|://registry.yarnpkg.com|://registry.npmmirror.com|g" $(find -name "*.lock")
exit
fi

echo "exit"

exit

# code-web only currently


https://github.com/microsoft/vscode/archive/main.tar.gz

# yarn
./scripts/code-server.sh --launch

rm -rf out

mkdir -p out/vs/code/browser/workbench
sed 's/{{WORKBENCH_WEB_BASE_URL}}//' src/vs/code/browser/workbench/workbench.html >out/vs/code/browser/workbench/workbench.html
cp src/vs/loader.js out/vs/loader.js

mkdir -p out/vs/workbench
for file in $(find src -name '*.css' -not -name '*_utf16*'); do
    cat $file >>out/vs/workbench/workbench.web.main.css
done
esbuild src/vs/workbench/workbench.web.main.nls.js --bundle --minify --target=esnext --external:vs/css* >out/vs/workbench/workbench.web.main.nls.js
esbuild src/vs/workbench/workbench.web.main.ts --bundle --minify --target=esnext --external:vs/css* >out/vs/workbench/workbench.web.main.js

mkdir -p out/vs/code/browser/workbench/
esbuild src/vs/code/browser/workbench/workbench.ts --bundle --minify --target=esnext --external:vs/css* >out/vs/code/browser/workbench/workbench.js

/home/kkocdko/misc/apps/miniserve . -p 9433
# esbuild src/server-main.js --outdir=out --platform=node $extra_args
# src/vs/loader.js
# http://localhost:8109/
# esbuild --bundle `find src -name *.css` --outfile=out/workbench.web.main.css
# esbuild src/vs/code/browser/workbench/workbench.ts --outdir=out $extra_args
# ~/misc/apps/miniserve -p 9423 --index src/vs/code/browser/workbench/workbench.html .
# src/vs/code/browser/workbench/workbench.html
#  '' --serve=9423  # --bundle --minify --sourcemap --jsx=automatic --legal-comments=none --watch
# https://github.com/microsoft/vscode/wiki/How-to-Contribute

# https://github.com/microsoft/vscode-l10n/issues/104#issuecomment-1511659944
#! Although this allows the build to continue, it renders vscode unusable
einfo "Fixing l10n-dev"
sed -i 's/return await import_web_tree_sitter/return null; await import_web_tree_sitter/' node_modules/@vscode/l10n-dev/dist/main.js || die

~/misc/apps/miniserve -p 9429  --header 'Access-Control-Allow-Origin:*' --  .
./scripts/code-web.sh --host 127.0.0.1 --port 9888
