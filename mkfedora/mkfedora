#!/bin/sh

mkdir -p /tmp/mkfedora
cd /tmp/mkfedora

in_iso="/run/media/kkocdko/data/in.iso" # the input iso, currently it's Fedora-Workstation-Live-x86_64-39-1.5.iso
if [ -e $in_iso.img ]; then # avoid running unsquashfs every time, faster develop-debug loop
  cp $in_iso.img cur.img # copy to current dir
else
  mkdir in-iso
  mount -r $in_iso in-iso
  unsquashfs in-iso/LiveOS/squashfs.img
  mv squashfs-root/LiveOS/rootfs.img cur.img
  cp cur.img $in_iso.img
  umount in-iso
  rm -rf in-iso squashfs-root
fi
mkdir cur
mount -o loop,rw cur.img cur # mount as read-write

cat <<EOF >cur/usr/share/glib-2.0/schemas/01_mkfedora.gschema.override # modify default config
[org.gnome.settings-daemon.plugins.power]
idle-brightness=100
[org.gnome.mutter]
check-alive-timeout=7200000
[org.gnome.desktop.peripherals.touchpad]
tap-to-click=true
[org.gnome.desktop.background]
primary-color="#000000"
[org.gnome.desktop.interface]
enable-animations=false
cursor-blink=false
gtk-theme="adw-gtk3"
font-name="Noto Sans 11"
document-font-name="Noto Sans 11"
monospace-font-name="Noto Sans Mono 10"
[org.gnome.desktop.wm.preferences]
titlebar-font="Noto Sans Bold 11"
[org.gnome.TextEditor]
spellcheck=false
EOF
cat <<EOF | chroot cur /bin/bash # inner chroot
glib-compile-schemas /usr/share/glib-2.0/schemas # compile config
dnf mark install tmux # keep these packages
dnf group remove -y firefox printing libreoffice guest-desktop-agents container-management multimedia # remove groups first
dnf remove -y \
  libreoffice-* qemu-* podman abrt plymouth kernel-modules-extra xorg-x11-server-Xorg gnome-shell-extension-* qt5-* qt6-* PackageKit-* git nano cpp sos orca tcpdump traceroute binutils uresourced whois words dnsmasq avahi firewalld gamemode python-systemd-doc fros pcsc-lite-* libsane-* evince-* geolite2-* langpacks-* glibc-all-langpacks hunspell-en-GB bash-color-prompt  \
  gnome-software gnome-remote-desktop gnome-connections gnome-browser-connector gnome-calendar gnome-clocks gnome-contacts gnome-weather gnome-tour gnome-user-docs gnome-characters gnome-maps gnome-logs gnome-font-viewer gnome-calculator totem baobab loupe cheese evince rhythmbox simple-scan \
  ibus-anthy ibus-hangul ibus-libzhuyin ibus-m17n ibus-typing-booster \
  desktop-backgrounds-gnome gnome-backgrounds fedora-workstation-backgrounds fedora-third-party fedora-logos-httpd fedora-chromium-* \
  default-fonts-core-math default-fonts-core-emoji default-fonts-other-* aajohan-comfortaa-fonts abattis-cantarell-fonts adobe-source-code-pro-fonts
printf "import sqlite3\nf=lambda p:sqlite3.connect(p).execute('vacuum;')\nf('/usr/lib/sysimage/rpm/rpmdb.sqlite')\nf('/var/lib/dnf/history.sqlite')" | python3 # tidy database
echo "%_install_langs POSIX" >>/etc/rpm/macros # avoid extra locale files, see https://github.com/coreos/fedora-coreos-config/issues/194
rm -rf /usr/share/locale/* # remove useless locale files
rm -rf /var/lib/selinux/targeted/active/modules/* /var/cache/swcatalog/cache/* # temp files
rm -rf /usr/share/ibus/dicts/emoji-* # emoji in ibus
sed -i /etc/selinux/config -e 's|SELINUX=enforcing|SELINUX=disabled|' # it sucks, cause systemd-xxx failed even after removing a normal package like qemu
mkdir -p /etc/systemd/logind.conf.d
printf "[Login]\nHandleLidSwitch=ignore\nHandleLidSwitchExternalPower=ignore\nHandleLidSwitchDocked=ignore\n" >/etc/systemd/logind.conf.d/90-ignore-lid.conf
mkdir -p /etc/systemd/journald.conf.d
printf "[Journal]\nSystemMaxUse=128M\nCompress=1M\n" >/etc/systemd/journald.conf.d/90-less-log.conf
# dnf remove anaconda-core anaconda-install-env-deps yelp livesys-scripts systemd-resolved chrony flatpak-libs NetworkManager-config-connectivity-fedora # you can remove these after install to disk
# dnf install git-core gcc-c++ google-noto-emoji-fonts docker pipewire-utils java-17-openjdk wireshark --setopt=install_weak_deps=False # recommand packages
# systemctl disable dnf-makecache.service
# systemctl disable dnf-makecache.timer
# grub2-mkconfig -o /boot/grub2/grub.cfg # apply "/etc/default/grub", GRUB_CMDLINE_LINUX="amd_pstate=passive mitigations=off selinux=0"
EOF

[ ! -e adw-gtk3.tar.xz ] && curl -o adw-gtk3.tar.xz -L https://github.com/lassekongo83/adw-gtk3/releases/download/v5.1/adw-gtk3v5-1.tar.xz
tar -xf adw-gtk3.tar.xz -C cur/usr/share/themes/

# > rootfs: ext4 over squashfs
# dd if=/dev/zero of=rootfs.img bs=1 count=0 seek=8192M
# mkfs.ext4 rootfs.img -L Anaconda -b 4096 -m 0
# mkdir rootfs
# mount -t ext4 rootfs.img rootfs
# rsync -axHAXv cur/ rootfs/ >/dev/null # cp -a out/* out-rootfs-img
# umount rootfs cur
# rm -rf rootfs cur cur.img
# mkdir -p squashfs/LiveOS
# mv rootfs.img squashfs/LiveOS/rootfs.img
# mksquashfs squashfs squashfs.img -no-duplicates -no-sparse -not-reproducible -no-recovery -comp lz4
# rm -rf squashfs

# > rootfs: direct squashfs
# mksquashfs cur squashfs.img -b 1M -no-recovery -no-duplicates -no-sparse -not-reproducible -comp lz4 # fast, for debug
mksquashfs cur squashfs.img -b 1M -no-recovery -comp zstd -Xcompression-level 22 # slow, but smaller
umount cur
rm -rf cur cur.img

rm -rf out.iso
xorriso -dev $in_iso -outdev out.iso -boot_image any replay -map squashfs.img /LiveOS/squashfs.img
rm -rf squashfs.img
