#!/bin/sh
cd $(dirname $0)

if [ ! -e dist ]; then
  mkdir dist
  cd dist
  curl -L https://github.com/SagerNet/sing-box/releases/download/v1.10.0-beta.11/sing-box-1.10.0-beta.11-linux-amd64.tar.gz | tar -xz --strip-component 1
  curl -L https://github.com/xmdhs/clash2singbox/releases/download/v0.1.4/clash2singbox-linux-amd64 -o clash2singbox
  chmod +x clash2singbox
  # rm -f registerSW.js sw.js *.ico *.png manifest.webmanifest Twemoji_* assets/Twemoji_* assets/roboto-* assets/inter-*
  exit
fi

if [ "$1" = fetch ]; then
  node --experimental-detect-module config-sub-fetch.js
  exit
fi

if [ "$1" = bench ]; then
  for url in "https://www.google.com/robots.txt" "https://www.deepl.com/robots.txt" "https://en.wikipedia.org/robots.txt" "https://openai.com/robots.txt" "https://x.com/robots.txt" "https://www.reddit.com/robots.txt" "https://github.com/robots.txt"; do
    echo "$(\time -p curl --silent -o /dev/null $url 2>&1 | head -n 1 | cut -d " " -f 2)" "$url"
  done
  exit
fi

if [ "$1" = run ]; then
  cd dist
  if [ $EUID != 0 ]; then echo "Should be run as root."; exit; fi
  ./sing-box version
  ./sing-box run -c config.jsonc -D .
  exit
fi

exit
# sudo watch 'ss --tcp | grep 2400 | sort'
# ./sing-box generate tls-keypair 127.0.0.1 -m 120 > pair.pem
# printf "[main]\ndns=none\nrc-manager=unmanaged\n" > /etc/NetworkManager/conf.d/70-no-dns.conf # 禁用 nm 自动修改 resolv.conf
# systemctl restart NetworkManager
# printf "# manually writen\nnameserver 172.19.0.53\n# nameserver 223.5.5.5\n" > /etc/resolv.conf # 地址最好在 tun device 对应的网段内，防止泄漏。不要设置成 127.0.0.1 否则请求无法被嗅探和拦截
