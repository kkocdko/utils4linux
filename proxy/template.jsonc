{
  // "log": { "disabled": true }, // 日志不怎么耗资源，没有关的必要
  "experimental": {
    "clash_api": {
      "external_controller": "127.0.0.1:9090",
      "external_ui": "ui", // 打开 http://127.0.0.1:9090/ui 即可，默认会自动下载 yacd-meta
      "external_ui_download_detour": "proxy" // 需要从 github 下载，走代理会稳一些，请确保第一个代理能连上
    },
    "cache_file": { "enabled": true } // store_fakeip 在极端情况下会让错误无法恢复，建议不要使用
  },
  "dns": {
    "fakeip": {
      "enabled": true,
      "inet4_range": "198.18.0.0/15",
      "inet6_range": "fc00::/18"
    },
    "strategy": "prefer_ipv4", // 缓兵之计，兼容没有 ipv6 地址的环境。通常本机无 v6 地址时不会发起 v6 请求，但 tun device 的 v6 地址会让应用误以为可用
    "independent_cache": true, // 不要让 fakeip 和其他 dns 缓存混淆
    "servers": [
      { "address": "tls://1.12.12.12", "detour": "direct" }, // 默认是第一个，约等于 final
      { "tag": "remote", "address": "fakeip" }
    ],
    "rules": [{ "query_type": ["A", "AAAA"], "server": "remote" }] // 尽量让落地服务器做 dns 查询，server 的域名和 direct 会用默认的 dns
  },
  "route": {
    "auto_detect_interface": true, // 防止 tun device 环路
    // prettier-ignore
    "rule_set": [{"tag":"ip-cn","type":"remote","format":"binary","url":"https://raw.githubusercontent.com/SagerNet/sing-geoip/rule-set/geoip-cn.srs","download_detour":"proxy"},{"tag":"site-cn","type":"remote","format":"binary","url":"https://raw.githubusercontent.com/SagerNet/sing-geosite/rule-set/geosite-cn.srs","download_detour":"proxy"}],
    "rules": [
      { "protocol": "dns", "outbound": "dns" }, // 劫持 dns，省去手动设置 dns。在 linux 下可能需要卸载 systemd-resolved
      { "protocol": "quic", "outbound": "block" }, // quic 对代理不友好，直接禁止，强迫应用回落到其他协议
      { "ip_is_private": true, "outbound": "direct" }, // 注意顺序，内网 quic 依然会被上一条禁止
      { "clash_mode": "Direct", "outbound": "direct" }, // 注意顺序，放在开头将导致 direct 模式下 dns 不被劫持
      { "clash_mode": "Global", "outbound": "proxy" },
      { "package_name": "com.eg.android.AlipayGphone", "outbound": "direct" },
      { "package_name": "com.autonavi.minimap", "outbound": "direct" },
      { "package_name": "com.tencent.mm", "outbound": "direct" },
      { "package_name": "com.tencent.mobileqq", "outbound": "direct" },
      { "package_name": "com.tencent.tim", "outbound": "direct" },
      { "package_name": "com.tencent.wemeet.app", "outbound": "direct" },
      { "package_name": "com.chaoxing.mobile", "outbound": "direct" },
      { "package_name": "com.zmzx.college.search", "outbound": "direct" },
      { "package_name": "com.jiongji.andriod.card", "outbound": "direct" },
      { "domain_suffix": ".servicebus.windows.net", "outbound": "proxy-picky" }, // 给 github codespace 特殊待遇，别断了
      { "domain_suffix": "deepl.com", "outbound": "proxy-picky" }, // 给 deepl 特殊待遇，多人使用的 ip 有时候会碰到限额
      { "domain_suffix": "gstatic.com", "outbound": "proxy" }, // 虽然 google static 国内能访问，但还是走代理比较好
      { "domain_suffix": ".bytevcloud.com", "outbound": "direct" }, // 字节飞书 地区检测 或 视频流
      { "domain_suffix": ".volcvideos.com", "outbound": "direct" }, // 字节 火山引擎
      { "domain": "api.openai-proxy.org", "outbound": "direct" }, // gpt api 国内代理商
      { "domain": "api.basi.monster", "outbound": "direct" }, // gpt api 国内代理商
      { "domain": "api.gptapi.us", "outbound": "direct" }, // gpt api 国内代理商
      { "ip_cidr": "x.x.x.x/32", "outbound": "direct" }, // 在国内的服务器
      { "rule_set": ["ip-cn", "site-cn"], "outbound": "direct" }, // 在国内的 IP 和 在国内的域名。原先的 @cn 已合并到 cn
      { "domain": "-", "invert": true, "outbound": "proxy" } // 约等于 final
    ]
  },
  "inbounds": [
    { "type": "socks", "listen": "127.0.0.1", "listen_port": 1080 }, // 尽量使用 socks，性能损失较小。使用流量较多的浏览器、git 等主流应用一般都支持 socks。如果遇到 pip 警告等情况，可以 unset all_proxy ALL_PROXY
    {
      "type": "tun", // 有些应用并不理会 xxx_proxy 环境变量，所以让 tun 作为兜底措施
      "inet4_address": "172.19.0.1/30",
      "inet6_address": "fdfe:dcba:9876::1/126",
      "auto_route": true,
      "strict_route": true,
      "sniff": true // 协议嗅探。劫持 dns、禁用 quic 等功能都依赖于此
    }
  ],
  // prettier-ignore
  "outbounds": [
    // 内置
    { "tag": "direct", "type": "direct" },
    { "tag": "block", "type": "block" },
    { "tag": "dns", "type": "dns" },
    // 组
    { "tag": "proxy", "type": "selector", "outbounds": ["foo-1-x0.1","proxy-sg"] },
    { "tag": "proxy-sg", "type": "selector", "outbounds": ["bar-1-sg-x10"] },
    // self-hosted
    {"tag":"sh-hello","detour":"sh-hello-outer","type":"shadowsocks","method":"2022-blake3-aes-128-gcm","password":"xxx"},{"type":"shadowtls","tag":"sh-hello-outer","server":"1.1.1.1","server_port":11111,"version":3,"password":"xxx","tls":{"enabled":true,"server_name":"registry.npmmirror.com"}},
    // foo - paid - cheap - https://example.com
    {"tag":"foo-1-x0.1","server":"111.111.111.111","server_port":443},
    // bar - paid - https://example.com/api/v1/client/subscribe?token=xxx
    {"tag":"bar-1-sg-x10","password":"xxx","server":"xxx"},
    // localhost
    {"tag":"localhost-http","type":"http","server":"127.0.0.1","server_port":1080} // 小心别回环了
  ]
}
// curl --data-binary @config.jsonc -X PUT https://user:password@1.1.1.1:1111/dav/proxy/config.jsonc
