#!/bin/sh
if [ "$(id -u)" != "0" ]; then
echo "please run as root"
exit
fi
codespace_name="shcs-0"
vscode_path="/home/kkocdko/misc/apps/vscode-dist"
nodejs_path="/home/kkocdko/misc/apps/node-20-pc"
if [ "$(docker ps -aqf name=$codespace_name)" != "" ]; then
echo "container $codespace_name is already existed"
exit
fi
docker run -d --network host --name $codespace_name --hostname $codespace_name debian:12 tail -f /dev/null
docker cp "$vscode_path" "$codespace_name:/vscode-dist"
docker cp "$nodejs_path" "$codespace_name:/vscode-dist/node"
docker exec -it $codespace_name sh -c 'rm -rf /etc/apt/sources.list.d'
docker exec -it $codespace_name sh -c 'printf "deb http://mirrors.ustc.edu.cn/debian bookworm main\ndeb http://mirrors.ustc.edu.cn/debian bookworm-updates main\n" > /etc/apt/sources.list'
docker exec -it $codespace_name sh -c 'mkdir -p /root/projects/hi'
docker exec -it -w /vscode-dist -e UV_USE_IO_URING=0 $codespace_name ./node ./out/server-main.js --accept-server-license-terms --host 0.0.0.0 --port 9448 --without-connection-token
# apt install -y python3 tmux curl procps busybox libasan8 gcc
# apt install default-mysql-server
# mysqld --user root --port 13306

exit

# use caddy

#!/bin/sh
cd $(dirname $0)
if [ ! -e ./dist ]; then
mkdir -p ./dist
curl -L https://github.com/caddyserver/caddy/releases/download/v2.7.6/caddy_2.7.6_linux_amd64.tar.gz | tar -xz -C ./dist caddy
fi
cd ./dist
./caddy run -c ../caddy.json
# ./caddy adapt --config ../Caddyfile --pretty > ../caddyfile.json
# - for http only, add into "automatic_https" section: ` "skip": ["127.0.0.1"] `
# - for testing: ` { "handler": "static_response", "body": "hi" } `
# ssh -N -R 10448:127.0.0.1:9458 root@1.1.1.1 # ensure "GatewayPorts yes" in /etc/ssh/sshd_config
# https://1.1.1.1:10448/?folder=/root/projects/hi
