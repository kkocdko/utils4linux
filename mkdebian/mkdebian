#!/bin/sh
set -ex
temp_dir=/tmp/mkdebian
dist_dir=$(pwd)/dist
if [ $(id -u) != 0 ]; then echo "Should be run as root."; exit; fi
if [ -e $temp_dir ]; then echo "Need to clean the temp dir manually."; exit; fi
if [ "$1" = test ]; then
  mkdir -p /tmp/qemu_hda/EFI/BOOT /tmp/qemu_hda/LiveOS
  efi_file=/tmp/qemu_hda/EFI/BOOT/BOOTX64.EFI
  cp $dist_dir/linux.efi $efi_file
  cp $dist_dir/squashfs.img /tmp/qemu_hda/LiveOS/squashfs.img
  printf "#!/bin/sh\necho says hello\nbash\n" > /tmp/qemu_hda/hello.sh
  printf 'root=live:/dev/disk/by-id/ata-QEMU_HARDDISK_QM00001-part1 rd.live.overlay.overlayfs=1 mitigations=off selinux=0 init=/bin/bash -- -c "until cd /run/initramfs/live 2> /dev/null; do sleep 0.1; done; bash hello.sh" \0' > $efi_file.cmdline
  objcopy --update-section .cmdline=$efi_file.cmdline $efi_file # change uki cmdline without regeration, see https://kkocdko.site/post/202410210441
  qemu-system-x86_64 \
    -machine q35,accel=kvm -bios /usr/share/OVMF/OVMF_CODE.fd -cpu host -smp 3 -m 9G \
    -display gtk,gl=on -device virtio-vga-gl -device qemu-xhci -device usb-tablet \
    -drive format=raw,file=fat:rw:/tmp/qemu_hda
  rm -rf /tmp/qemu_hda
  exit
fi
mkdir -p $temp_dir $dist_dir
cd $temp_dir
curl \
  -o $dist_dir/debian.tar.xz -L http://mirrors.ustc.edu.cn/debian-cdimage/cloud/bookworm/20241004-1890/debian-12-generic-amd64-20241004-1890.tar.xz \
  -o $dist_dir/linux-image.deb -L https://downloads.sourceforge.net/project/xanmod/releases/main/6.11.4-xanmod1/6.11.4-x64v3-xanmod1/linux-image-6.11.4-x64v3-xanmod1_6.11.4-x64v3-xanmod1-0~20241017.g304e2da_amd64.deb?use_mirror=autoselect \
  -o $dist_dir/linux-headers.deb -L https://downloads.sourceforge.net/project/xanmod/releases/main/6.11.4-xanmod1/6.11.4-x64v3-xanmod1/linux-headers-6.11.4-x64v3-xanmod1_6.11.4-x64v3-xanmod1-0~20241017.g304e2da_amd64.deb?use_mirror=autoselect \
  --parallel --skip-existing # needs curl v8.11
tar -xf $dist_dir/debian.tar.xz
loop_dev=$(losetup --partscan --find --show disk.raw)
until [ $(lsblk $loop_dev -rno path | wc -l) = 4 ]; do sleep 0.1; done # wait, expect 3 partitions + 1 itself = 4 lines
rootfs_dev=$(lsblk $loop_dev -rno path | awk "1+1==NR{print}") # partition 1
mkdir root
mount $rootfs_dev root
ls root
mount --bind $dist_dir root/mnt
mount -t devtmpfs -o mode=0755,nosuid /dev root/dev # https://askubuntu.com/a/1514823
mount -t devpts -o mode=0620,gid=5,nosuid,noexec /dev/pts root/dev/pts
cat <<'EOF' | chroot root /bin/bash # inner chroot
set -ex
export LANG=C DEBIAN_FRONTEND=noninteractive
rm -rf /etc/resolv.conf /etc/apt/mirrors /etc/apparmor.d /etc/grub.d /etc/default/grub.d /usr/share/initramfs-tools
echo "nameserver 8.8.8.8" > /etc/resolv.conf
echo "source /etc/vim/vimrc" > /etc/vim/vimrc.tiny # disable vi compatibility mode in vim-tiny
echo "Acquire::http::Pipeline-Depth \"0\";" > /etc/apt/apt.conf.d/99nopipelining
echo "" > /etc/fstab
printf "net.ipv4.tcp_congestion_control = bbr\nnet.core.default_qdisc = fq\n" > /etc/sysctl.d/77-bbr.conf
printf "Types: deb\nURIs: http://deb.debian.org/debian\nSuites: bookworm bookworm-updates bookworm-backports\nComponents: main\nSigned-By: /usr/share/keyrings/debian-archive-keyring.gpg\n\nTypes: deb\nURIs: http://deb.debian.org/debian-security\nSuites: bookworm-security\nComponents: main\nSigned-By: /usr/share/keyrings/debian-archive-keyring.gpg\n\n# > https://help.mirrorz.org/debian/\n# http://mirrors.ustc.edu.cn/debian # and -security\n# http://mirrors.tuna.tsinghua.edu.cn/debian # and -security\n" > /etc/apt/sources.list.d/debian.sources
apt remove -y --purge --allow-remove-essential netplan.io systemd-resolved systemd-timesyncd vim-runtime screen reportbug whiptail wget apparmor initramfs-tools-core unattended-upgrades grub-common grub-efi-amd64-signed
apt update
apt install -y --no-install-recommends tmux vim-tiny busybox-static binutils parted dosfstools systemd-boot-efi dracut-live dracut-config-generic # avoid dracut-network
apt install -y /mnt/linux-image.deb /mnt/linux-headers.deb
apt autoremove -y
apt clean all -y
dracut --kver $(ls /lib/modules) --kernel-cmdline "$(printf %1024s)" --add dmsquash-live-autooverlay --no-early-microcode --compress "zstd -19" --uefi /mnt/linux.efi
printf " \0" > /mnt/linux.efi.cmdline
objcopy --update-section .cmdline=/mnt/linux.efi.cmdline /mnt/linux.efi
rm -f /mnt/linux.efi.cmdline
printf "root\nroot\n" | passwd
echo "# nameserver 8.8.8.8" > /etc/resolv.conf
EOF
umount --recursive root/mnt root/dev
mksquashfs root $dist_dir/squashfs.img -b 1M -no-recovery -comp zstd -Xcompression-level 19
umount --recursive root
losetup --detach $loop_dev
rm -rf $temp_dir

exit # ==============================

chroot root /bin/bash
blockdev --rereadpt /dev/sdX # instead of partprobe
apt-mark hold apparmor initramfs-tools-core
apt remove -y $(dpkg-query -Wf ' ${Package}' dracut-* linux-image-*)
useradd tom; id tom; passwd tom
xorriso -outdev out.iso -boot_image any efi_file=/EFI/BOOT/BOOTX64.EFI -map squashfs.img /squashfs.img -map linux.efi /EFI/BOOT/BOOTX64.EFI
efibootmgr --create --disk /dev/sda --part 1 --label kk --loader /linux.efi --unicode 'root=UUID=657491eb-ced0-4f03-8e0f-04a0997d4781 ro rootflags=subvol=root initrd=\initramfs.img amd_pstate=passive mitigations=off selinux=0'
sudo bash -c 'rm -rf dist/linux.efi dist/squashfs.img; ./mkdebian'
sudo bash -c 'media_mnt=/run/media/kkocdko/KKOCDKO; cp dist/linux.efi $media_mnt/EFI/BOOT/BOOTX64.EFI; cp dist/squashfs.img $media_mnt/LiveOS/squashfs.img'
# https://wiki.debian.org/Gnome#Options
# http://mirrors.ustc.edu.cn/debian-cdimage/firmware/bookworm/20240831/
# https://packages.debian.org/bookworm/firmware-linux
