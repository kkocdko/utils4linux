#!/bin/sh
set -xe
temp_dir=/tmp/mkdebian
dist_dir=$(pwd)/dist
if [ "$(id -u)" != "0" ]; then echo "Should be run as root."; exit; fi
if [ -e $temp_dir ]; then echo "Need to clean the temp dir manually."; exit; fi
if [ "$1" = "test" ]; then
  mkdir -p /tmp/qemu_hda/EFI/BOOT /tmp/qemu_hda/LiveOS
  cp $dist_dir/linux.efi /tmp/qemu_hda/EFI/BOOT/BOOTX64.EFI
  cp $dist_dir/squashfs.img /tmp/qemu_hda/LiveOS/squashfs.img
  printf "root=live:/dev/sda1 rd.live.overlay.overlayfs=1 mitigations=off selinux=0\0" > /tmp/qemu_hda/EFI/BOOT/cmdline
  objcopy --update-section .cmdline=/tmp/qemu_hda/EFI/BOOT/cmdline /tmp/qemu_hda/EFI/BOOT/BOOTX64.EFI
  qemu-system-x86_64 \
    -machine q35,accel=kvm -cpu host \
    -bios /usr/share/OVMF/OVMF_CODE.fd \
    -smp 3 -m 9G \
    -nic hostfwd=tcp:127.0.0.1:9121-:5000 \
    -display gtk,gl=on -device virtio-vga-gl -device qemu-xhci -device usb-tablet \
    -drive format=raw,file=fat:rw:/tmp/qemu_hda
  rm -rf /tmp/qemu_hda
  exit
fi
mkdir -p $temp_dir $dist_dir
cd $temp_dir
curl \
  -o $dist_dir/debian.tar.xz -L http://mirrors.ustc.edu.cn/debian-cdimage/cloud/bookworm/20241004-1890/debian-12-generic-amd64-20241004-1890.tar.xz \
  -o $dist_dir/linux-image.deb -L https://downloads.sourceforge.net/project/xanmod/releases/main/6.11.4-xanmod1/6.11.4-x64v3-xanmod1/linux-image-6.11.4-x64v3-xanmod1_6.11.4-x64v3-xanmod1-0~20241017.g304e2da_amd64.deb?use_mirror=autoselect \
  -o $dist_dir/linux-headers.deb -L https://downloads.sourceforge.net/project/xanmod/releases/main/6.11.4-xanmod1/6.11.4-x64v3-xanmod1/linux-headers-6.11.4-x64v3-xanmod1_6.11.4-x64v3-xanmod1-0~20241017.g304e2da_amd64.deb?use_mirror=autoselect \
  --parallel --skip-existing # needs curl v8.11
tar -xf $dist_dir/debian.tar.xz
loop_dev=$(losetup --partscan --find --show disk.raw)
until [ $(lsblk $loop_dev -rno path | wc -l) = 4 ]; do sleep 0.1; done # wait, expect 3 partitions + 1 itself = 4 lines
rootfs_dev=$(lsblk $loop_dev -rno path | awk "1+1==NR{print}") # partition 1
mkdir root
mount $rootfs_dev root
ls root
mount --bind $dist_dir root/mnt
mount -t devtmpfs -o mode=0755,nosuid /dev root/dev # https://askubuntu.com/a/1514823
mount -t devpts -o mode=0620,gid=5,nosuid,noexec /dev/pts root/dev/pts
cat <<'EOF' | chroot root /bin/bash # inner chroot
set -xe
export LANG=C DEBIAN_FRONTEND=noninteractive
rm -rf /etc/resolv.conf /etc/apparmor.d /etc/grub.d /etc/default/grub.d /usr/share/initramfs-tools
echo "nameserver 8.8.8.8" > /etc/resolv.conf
echo "source /etc/vim/vimrc" > /etc/vim/vimrc.tiny # disable vi compatibility mode in vim-tiny
echo "Acquire::http::Pipeline-Depth \"0\";" > /etc/apt/apt.conf.d/99nopipelining
echo "" > /etc/fstab
printf "net.ipv4.tcp_congestion_control = bbr\nnet.core.default_qdisc = fq\n" > /etc/sysctl.d/77-bbr.conf
printf "# > https://help.mirrorz.org/debian/\n# URIs: mirror+file:///etc/apt/mirrors/debian.list\nTypes: deb\nURIs: http://mirrors.ustc.edu.cn/debian\nSuites: bookworm bookworm-updates bookworm-backports\nComponents: main contrib non-free non-free-firmware\nSigned-By: /usr/share/keyrings/debian-archive-keyring.gpg\n\nTypes: deb\nURIs: http://mirrors.ustc.edu.cn/debian-security\nSuites: bookworm-security\nComponents: main contrib non-free non-free-firmware\nSigned-By: /usr/share/keyrings/debian-archive-keyring.gpg\n" > /etc/apt/sources.list.d/debian.sources
apt remove -y --purge --allow-remove-essential netplan.io systemd-resolved systemd-timesyncd vim-runtime apparmor initramfs-tools-core unattended-upgrades grub-common grub-efi-amd64-signed
apt update
apt install -y --no-install-recommends tmux vim-tiny busybox-static binutils systemd-boot-efi parted dracut-live dracut-config-generic # avoid dracut-network
apt install -y /mnt/linux-image.deb /mnt/linux-headers.deb
apt autoremove -y
apt clean all -y
dracut --kver $(ls /lib/modules) --kernel-cmdline "root=live:/dev/disk/by-label/KKOCDKO rd.live.overlay.overlayfs=1 mitigations=off selinux=0" --add dmsquash-live-autooverlay --no-early-microcode --compress "zstd -3" --uefi /mnt/linux.efi
printf "root\nroot\n" | passwd
echo "# nameserver 8.8.8.8" > /etc/resolv.conf
EOF
umount --recursive root/mnt root/dev
mksquashfs root $dist_dir/squashfs.img -b 1M -noappend -no-recovery -comp zstd -Xcompression-level 3
umount --recursive root
losetup --detach $loop_dev
rm -rf $temp_dir

exit # ==============================

# chroot root /bin/bash
# plan: 不使用包管理器构建 initramfs，始终不变。内核参数 objcopy 改。不安装内核包。 https://stackoverflow.com/a/42979727/11338291
# plan: 把所有包装成 manual？
# instead of partprobe, try: blockdev --rereadpt /dev/sdX
# apt remove -y $(dpkg-query -Wf ' ${Package}' dracut-* linux-image-*)

sudo bash -c 'rm -rf dist/linux.efi dist/squashfs.img; ./mkdebian'
sudo bash -c 'media_mnt=/run/media/kkocdko/KKOCDKO; cp dist/linux.efi $media_mnt/EFI/BOOT/BOOTX64.EFI; cp dist/squashfs.img $media_mnt/LiveOS/squashfs.img'
xorriso -outdev out.iso -boot_image any efi_path=/EFI/BOOT/BOOTX64.EFI -map squashfs.img /squashfs.img -map linux.efi /EFI/BOOT/BOOTX64.EFI

# https://wiki.debian.org/Gnome#Options
# http://mirrors.ustc.edu.cn/debian-cdimage/firmware/bookworm/20240831/
# https://packages.debian.org/bookworm/firmware-linux

useradd tom; id tom; passwd tom

efibootmgr --create --disk /dev/sda --part 1 --label kk --loader /linux.efi --unicode 'root=UUID=657491eb-ced0-4f03-8e0f-04a0997d4781 ro rootflags=subvol=root initrd=\initramfs.img amd_pstate=passive mitigations=off selinux=0'

#!/bin/sh

mkdir -p /tmp/mkfedora
cd /tmp/mkfedora

in_iso="/run/media/kkocdko/data/in.iso" # the input iso, currently it's Fedora-Workstation-Live-x86_64-39-1.5.iso
if [ -e $in_iso.img ]; then # avoid running unsquashfs every time, faster develop-debug loop
  cp $in_iso.img cur.img # copy to current dir
else
  mkdir in-iso
  mount -r $in_iso in-iso
  unsquashfs in-iso/LiveOS/squashfs.img
  mv squashfs-root/LiveOS/rootfs.img cur.img
  cp cur.img $in_iso.img
  umount in-iso
  rm -rf in-iso squashfs-root
fi
mkdir cur
mount -o loop,rw cur.img cur # mount as read-write

cat <<EOF >cur/usr/share/glib-2.0/schemas/01_mkfedora.gschema.override # modify default config
[org.gnome.settings-daemon.plugins.power]
idle-brightness=100
[org.gnome.mutter]
check-alive-timeout=7200000
[org.gnome.desktop.peripherals.touchpad]
tap-to-click=true
[org.gnome.desktop.background]
primary-color="#000000"
[org.gnome.desktop.interface]
enable-animations=false
cursor-blink=false
gtk-theme="adw-gtk3"
font-name="Noto Sans 11"
document-font-name="Noto Sans 11"
monospace-font-name="Noto Sans Mono 10"
[org.gnome.desktop.wm.preferences]
titlebar-font="Noto Sans Bold 11"
[org.gnome.TextEditor]
spellcheck=false
EOF
cat <<EOF | chroot cur /bin/bash # inner chroot
glib-compile-schemas /usr/share/glib-2.0/schemas # compile config
dnf mark install tmux # keep these packages
dnf group remove -y firefox printing libreoffice guest-desktop-agents container-management multimedia # remove groups first
dnf remove -y \
  libreoffice-* qemu-* podman abrt plymouth kernel-modules-extra xorg-x11-server-Xorg gnome-shell-extension-* qt5-* qt6-* PackageKit-* git nano cpp sos orca tcpdump traceroute binutils uresourced whois words dnsmasq avahi firewalld gamemode python-systemd-doc fros pcsc-lite-* libsane-* evince-* geolite2-* langpacks-* glibc-all-langpacks hunspell-en-GB bash-color-prompt  \
  gnome-software gnome-remote-desktop gnome-connections gnome-browser-connector gnome-calendar gnome-clocks gnome-contacts gnome-weather gnome-tour gnome-user-docs gnome-characters gnome-maps gnome-logs gnome-font-viewer gnome-calculator totem baobab loupe cheese evince rhythmbox simple-scan \
  ibus-anthy ibus-hangul ibus-libzhuyin ibus-m17n ibus-typing-booster \
  desktop-backgrounds-gnome gnome-backgrounds fedora-workstation-backgrounds fedora-third-party fedora-logos-httpd fedora-chromium-* \
  default-fonts-core-math default-fonts-core-emoji default-fonts-other-* aajohan-comfortaa-fonts abattis-cantarell-fonts adobe-source-code-pro-fonts
printf "import sqlite3\nf=lambda p:sqlite3.connect(p).execute('vacuum;')\nf('/usr/lib/sysimage/rpm/rpmdb.sqlite')\nf('/var/lib/dnf/history.sqlite')" | python3 # tidy database
echo "%_install_langs POSIX" >>/etc/rpm/macros # avoid extra locale files, see https://github.com/coreos/fedora-coreos-config/issues/194
rm -rf /usr/share/locale/* # remove useless locale files
rm -rf /var/lib/selinux/targeted/active/modules/* /var/cache/swcatalog/cache/* # temp files
rm -rf /usr/share/ibus/dicts/emoji-* /usr/lib64/libpinyin/data/bigram.db # emoji and bigram in ibus
sed -i /etc/selinux/config -e 's|SELINUX=enforcing|SELINUX=disabled|' # it sucks, cause systemd-xxx failed even after removing a normal package like qemu
mkdir -p /etc/systemd/logind.conf.d
printf "[Login]\nHandleLidSwitch=ignore\nHandleLidSwitchExternalPower=ignore\nHandleLidSwitchDocked=ignore\n" >/etc/systemd/logind.conf.d/90-ignore-lid.conf
mkdir -p /etc/systemd/journald.conf.d
printf "[Journal]\nSystemMaxUse=128M\nCompress=1M\n" >/etc/systemd/journald.conf.d/90-less-log.conf
# dnf remove anaconda-core anaconda-install-env-deps yelp livesys-scripts systemd-resolved chrony flatpak-libs NetworkManager-config-connectivity-fedora # you can remove these after install to disk
# dnf install git-core gcc-c++ google-noto-emoji-fonts docker pipewire-utils java-17-openjdk wireshark --setopt=install_weak_deps=False # recommand packages
# systemctl disable dnf-makecache.service
# systemctl disable dnf-makecache.timer
# grub2-mkconfig -o /boot/grub2/grub.cfg # apply "/etc/default/grub", GRUB_CMDLINE_LINUX="amd_pstate=passive mitigations=off selinux=0"
EOF

# curl https://mirrors.ustc.edu.cn/docker-ce/linux/fedora/docker-ce.repo | sed 's|download.docker.com|mirrors.ustc.edu.cn/docker-ce|' > /etc/yum.repos.d/docker-ce.repo # https://download.docker.com/linux/fedora/docker-ce.repo
# dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
# dockerd-rootless-setuptool.sh install # https://docs.docker.com/engine/security/rootless/

[ ! -e adw-gtk3.tar.xz ] && curl -o adw-gtk3.tar.xz -L https://github.com/lassekongo83/adw-gtk3/releases/download/v5.3/adw-gtk3v5.3.tar.xz
tar -xf adw-gtk3.tar.xz -C cur/usr/share/themes/
# https://extensions.gnome.org/extension/3843/just-perfection/ | https://extensions.gnome.org/extension-data/just-perfection-desktopjust-perfection.v27.shell-extension.zip
# run as non-root user please
# gnome-extensions install ./just-[TAB]
# reboot
# gnome-extensions prefs just-[TAB]

rm -rf out.iso
xorriso -dev $in_iso -outdev out.iso -boot_image any replay -map squashfs.img /LiveOS/squashfs.img
rm -rf squashfs.img
